@import '../../styles/font';
@import '../../styles/color';

.article {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  height: 100%;
  min-height: 100%;
}

.logoContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;

  @media all and (min-width: 841px) {
    justify-content: center;
    width: 50vw;
    height: 100vh;
  }

  .imageWrapper {
    position: relative;
    display: block;
    width: 100%;
    height: 60vh;
    @media all and (max-width: 840px) {
      margin-bottom: 2rem;
    }
  }
}

.mosaicContainer {
  width: 100%;
  max-width: 1200px;
  margin: 10vh 0;
}

.gridContainer {
  position: relative;
  flex-shrink: 0;
  width: 50%;
  height: 100%;
  padding: 2rem;
  margin: 1rem 5vw;
  text-align: center;

  h3 {
    text-transform: uppercase;
  }

  p {
    color: $greyDark;
    font-family: $neueText;
  }
}

.contentContainer {
  position: relative;
  width: 100%;
  height: 100%;
  max-width: 900px;
  column-count: 2;
  gap: 0.5rem;
  @media all and (max-width: 840px) {
    padding-top: 2rem;
    column-count: 1;
  }
}

.parallaxContainer {
  display: flex;
  width: 100%;
  max-width: 1600px;
  margin: 5vh 0;
}

.piecesContainer {
  position: fixed;
  width: 100%;
  height: 100%;
  opacity: 0.3;

  @mixin piece() {
    position: absolute;
    top: -100px;
    width: 100px;
    height: 100px;
  }

  .pieceYellow {
    @include piece();
    left: 40px;
    animation: spinClockwiseAndFall 30s infinite;
  }

  .piecePink {
    @include piece();
    right: 10vw;
    animation: spinCounterClockwiseAndFall 120s infinite;
  }
  .pieceGreen {
    @include piece();
    left: 40vw;
    animation: spinCounterClockwiseAndRise 120s -10s infinite;
  }
  .pieceBlue {
    @include piece();
    right: 20vw;
    animation: pulseAndFall 45s -5s infinite;
  }

  @keyframes pulseAndFall {
    0% {
      transform: translateY(0) rotateX(0);
    }
    100% {
      transform: translateY(calc(100vh + 100px)) rotateX(360deg);
    }
  }

  @keyframes spinCounterClockwiseAndFall {
    0% {
      transform: translateY(0) rotateZ(0);
    }
    100% {
      transform: translateY(calc(100vh + 100px)) rotate(-360deg);
    }
  }

  @keyframes spinCounterClockwiseAndRise {
    0% {
      transform: translateY(calc(100vh + 100px)) rotateZ(0);
    }
    100% {
      transform: translateY(0) rotate(-360deg);
    }
  }

  @keyframes spinClockwiseAndFall {
    0% {
      transform: translateY(0) rotateZ(0);
    }
    100% {
      transform: translateY(calc(100vh + 100px)) rotate(360deg);
    }
  }
}
